<?xml version="1.0" encoding="UTF-8"?>
<!--
A Croc spec thrown together for gedit. Based on D and JavaScript specs
-->
<!--
	Croc Language specification

	Reference:
		http://www.dsource.org/projects/minid/wiki/LanguageSpec/Lexical
-->
<language id="croc" _name="Croc" version="1.0" _section="Scripts">
  <metadata>
    <property name="mimetypes">text/x-crocsrc</property>
    <property name="globs">*.croc</property>
    <property name="line-comment-start">//</property>
    <property name="block-comment-start">/*</property>
    <property name="block-comment-end">*/</property>
  </metadata>

  <styles>
    <style id="comment" _name="Comment" map-to="def:comment"/>
    <style id="error" _name="Error" map-to="def:error"/>
    <style id="string" _name="String" map-to="def:string"/>
    <style id="keyword" _name="Keyword" map-to="def:keyword"/>
    <style id="type" _name="Data Type" map-to="def:type"/>
    <style id="special-token" _name="Special Token" map-to="def:preprocessor"/>
    <style id="null-value" _name="Null Value" map-to="def:special-constant"/>
    <style id="boolean" _name="Boolean" map-to="def:boolean"/>
    <style id="floating-point" _name="Floating point number" map-to="def:floating-point"/>
    <style id="decimal" _name="Decimal number" map-to="def:decimal"/>
    <style id="binary" _name="Binary number" map-to="def:base-n-integer"/>
    <style id="octal" _name="Octal number" map-to="def:base-n-integer"/>
    <style id="hexadecimal" _name="Hexadecimal number" map-to="def:base-n-integer"/>
    <style id="constructors" _name="Constructors" map-to="def:type"/>
  </styles>

  <definitions>

    <context id="line-comment" style-ref="comment" end-at-line-end="true">
      <start>//</start>
      <include>
        <context ref="def:in-line-comment"/>
      </include>
    </context>

    <context id="block-comment" style-ref="comment">
      <start>/\*</start>
      <end>\*/</end>
      <include>
        <context ref="def:in-comment"/>
      </include>
    </context>

    <context id="close-comment-outside-comment" style-ref="error">
      <match>\*/(?!\*)</match>
    </context>

    <context id="nesting-comment" style-ref="comment">
      <start>/\+</start>
      <end>\+/</end>
      <include>
        <context ref="nesting-comment"/>
        <context ref="def:in-comment"/>
      </include>
    </context>

    <context id="double-quoted-string" style-ref="string">
      <start>"</start>
      <end>"</end>
      <include>
        <context ref="def:escape"/>
        <context ref="def:line-continue"/>
      </include>
    </context>

    <context id="single-quoted-string" style-ref="string" end-at-line-end="true">
      <start>'</start>
      <end>'</end>
      <include>
        <context ref="def:escape"/>
        <context ref="def:line-continue"/>
      </include>
    </context>

    <context id="backtick-quoted-string" style-ref="string">
      <start>`</start>
      <end>`</end>
      <include>
        <context ref="def:escape"/>
        <context ref="def:line-continue"/>
      </include>
    </context>

    <context id="keywords" style-ref="keyword">
	 <keyword>as</keyword>
	 <keyword>break</keyword>
	 <keyword>case</keyword>
	 <keyword>class</keyword>
	 <keyword>catch</keyword>
	 <keyword>continue</keyword>
	 <keyword>coroutine</keyword>
	 <keyword>default</keyword>
	 <keyword>do</keyword>
	 <keyword>else</keyword>
	 <keyword>false</keyword>
	 <keyword>finally</keyword>
	 <keyword>for</keyword>
	 <keyword>foreach</keyword>
	 <keyword>function</keyword>
	 <keyword>global</keyword>
	 <keyword>if</keyword>
	 <keyword>import</keyword>
	 <keyword>in</keyword>
	 <keyword>is</keyword>
	 <keyword>local</keyword>
	 <keyword>module</keyword>
	 <keyword>null</keyword>
	 <keyword>return</keyword>
	 <keyword>scope</keyword>
	 <keyword>super</keyword>
	 <keyword>switch</keyword>
	 <keyword>this</keyword>
	 <keyword>throw</keyword>
	 <keyword>true</keyword>
	 <keyword>try</keyword>
	 <keyword>vararg</keyword>
	 <keyword>while</keyword>
	 <keyword>with</keyword>
	 <keyword>yield</keyword>
    </context>

    <context id="null-value" style-ref="null-value">
      <keyword>null</keyword>
    </context>

    <context id="boolean" style-ref="boolean">
      <keyword>false</keyword>
      <keyword>true</keyword>
    </context>

    <context id="float" style-ref="floating-point">
      <match extended="true">
        (?&lt;![\w\.])
        ([0-9_]+[Ee][-]?[0-9_]+|([0-9_]*\.[0-9_]+|[0-9_]+\.)([Ee][-]?[0-9_]+)?)[fFLi]?
        (?![\w\.])
      </match>
    </context>

    <context id="decimal" style-ref="decimal">
      <match extended="true">
        (?&lt;![\w\.])
        ([1-9][0-9_]*|0)([Uu]([Ll]|LL|ll)?|([Ll]|LL|ll)[Uu]?)?
        (?![\w\.])
      </match>
    </context>

    <context id="binary" style-ref="binary">
      <match extended="true">
        (?&lt;![\w\.])
        0[bB][01_]*
        (?![\w\.])
      </match>
    </context>

    <context id="octal" style-ref="octal">
      <match extended="true">
        (?&lt;![\w\.])
        0[0-7_]+([Uu]([Ll]|LL|ll)?|([Ll]|LL|ll)[Uu]?)?
        (?![\w\.])
      </match>
    </context>

    <context id="hexadecimal" style-ref="hexadecimal">
      <match extended="true">
        (?&lt;![\w\.])
        0[xX][0-9a-fA-F_]+([Uu]([Ll]|LL|ll)?|([Ll]|LL|ll)[Uu]?)?
        (?![\w\.])
      </match>
    </context>
    
	<context id="constructors" style-ref="constructors">
	 <keyword>StringBuffer</keyword>
	</context>

    <context id="croc">
      <include>
        <context ref="def:shebang"/>
        <context ref="line-comment"/>
        <context ref="block-comment"/>
        <context ref="close-comment-outside-comment"/>
        <context ref="nesting-comment"/>
        <context ref="double-quoted-string"/>
        <context ref="single-quoted-string"/>
        <context ref="backtick-quoted-string"/>
        <context ref="keywords"/>
        <context ref="null-value"/>
        <context ref="boolean"/>
        <context ref="float"/>
        <context ref="binary"/>
        <context ref="octal"/>
        <context ref="decimal"/>
        <context ref="hexadecimal"/>
        <context ref="constructors"/>
      </include>
    </context>

  </definitions>

</language>
