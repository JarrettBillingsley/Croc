//////////////////////////////////////////////////////////////////////////////
//
// D highlighter written by DrakeX, and no i'm not giving you my email..!
//
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
// language name

Language:               MiniD 2


//////////////////////////////////////////////////////////////////////////////
// default file filter
// note: if more than one extension is associated, eg:
// C/C++ files (*.c,*.cpp,*.h,*.hpp)|*.c;*.cpp;*.h;*.hpp

Filter:                 MiniD source files (*.md)|*.md


//////////////////////////////////////////////////////////////////////////////
// help file which will be invokend when F1 is pressed

HelpFile:


//////////////////////////////////////////////////////////////////////////////
// language case sensitivity
//                      0  - no
//                      1  - yes

CaseSensitive:          1


//////////////////////////////////////////////////////////////////////////////
// comment type: LineComment - comment to the end of line
// BlockCommentBeg - block comment begin, it could be
// multiline
// BlockCommentEnd - block comment end

LineComment:		//
BlockCommentBeg:	/*
BlockCommentEnd:	*/


//////////////////////////////////////////////////////////////////////////////
// identifier characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char

IdentifierBegChars:     a..z A..Z _
IdentifierChars:        a..z A..Z _ 0..9

//////////////////////////////////////////////////////////////////////////////
// numeric constants begin characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char
// number always starts with 0..9 except when NumConstBeg
// defines other

NumConstBegChars:       0..9


//////////////////////////////////////////////////////////////////////////////
// numeric constants characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char
// number always starts with 0..9 except when NumConstBeg
// defines other

NumConstChars:          0..9 _ abcdefiluxABCDEFILUX


//////////////////////////////////////////////////////////////////////////////
// escape character

EscapeChar:	\


//////////////////////////////////////////////////////////////////////////////
// keyword table
// note: delimited with spaces, lines could be wrapped
// you may divide keywords into two groups which can be
// highlighted differently

KeyWords1:	
	as
	assert
	break
	case
	catch
	class
	continue
	coroutine
	default
	do
	else
	false
	finally
	for
	foreach
	function
	global
	if
	import
	in
	is
	local
	module
	namespace
	null
	return
	scope
	super
	switch
	this
	throw
	true
	try
	vararg
	while
	with
	yield

//////////////////////////////////////////////////////////////////////////////
// string delimiter: StringBegChar - string begin char
// StringEndChar - string end char
// MultilineStrings - enables multiline strings, as perl
// has it

StringBegChar:          "`'
StringEndChar:          "`'
MultilineStrings:       1


//////////////////////////////////////////////////////////////////////////////
// use preprocessor: 0 - no
// 1 - yes
// note: if yes, '#' and statements after it will be
// highlighted with Preprocessor defined colors

UsePreprocessor:        0


//////////////////////////////////////////////////////////////////////////////
// highlight line: 0 - no
// 1 - yes
// note: if yes, current line will be highlighted

CurrLineHighlighted:    1


//////////////////////////////////////////////////////////////////////////////
// colors
// note:                first value is foreground, second is background color
//                        and third (optional) represents font attribute:
//                        B - bold
//                        I - italic
//                        U - underline
//                        S - strike out
//                        attributes can be combined: eg. B or BI
//                      as value, it could be used any standard windows color:
//                        clBlack, clMaroon, clGreen, clOlive, clNavy,
//                        clPurple, clTeal, clGray, clSilver, clRed, clLime,
//                        clYellow, clBlue, clFuchsia, clAqua, clLtGray,
//                        clDkGray, clWhite, clScrollBar, clBackground,
//                        clActiveCaption, clInactiveCaption, clMenu, clWindow,
//                        clWindowFrame, clMenuText, clWindowText, clCaptionText,
//                        clActiveBorder, clInactiveBorder, clAppWorkSpace,
//                        clHighlight, clHighlightText, clBtnFace, clBtnShadow,
//                        clGrayText, clBtnText, clInactiveCaptionText,
//                        clBtnHighlight, cl3DDkShadow, cl3DLight, clInfoText,
//                        clInfoBk
//                      as value, it could be used hex numeric constant too:
//                        $BBGGRR - BB: blue, GG: green, RR: red, eg: $FF6A00

SpaceCol:               clWhite clBlack
KeyWords1Col:		$ff0000 $000000
KeyWords2Col:		$ff0000 $000000
IdentifierCol:          clWhite clBlack
CommentCol:             clGreen clBlack
NumberCol:              $0040FF40 clBlack
StringCol:              $000080FF clBlack
SymbolCol:              clWhite clBlack
PreprocessorCol:        clRed clBlack
SelectionCol:           clWhite clNavy
CurrentLineCol:         clWhite $00303030
OverrideTxtFgColor:     0
BlockAutoindent:        1
BlockBegStr:            {
BlockEndStr:            }
Keyword1Col:            clRed clBlack
Keyword2Col:            $00FF40FF clBlack
Keyword3Col:            clYellow clBlack
MatchedBracesCol:       $00FF8080 clBlack
Keyword4Col:            clWindowText clWindow
Keyword5Col:            clWindowText clWindow
